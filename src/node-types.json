[
  {
    "type": "anonymous_class",
    "named": true,
    "fields": {}
  },
  {
    "type": "arguments",
    "named": true,
    "fields": {}
  },
  {
    "type": "array",
    "named": true,
    "fields": {}
  },
  {
    "type": "arrow_function",
    "named": true,
    "fields": {}
  },
  {
    "type": "assignment_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "assignment_pattern",
    "named": true,
    "fields": {}
  },
  {
    "type": "augmented_assignment_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "await_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "binary_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "break_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "call_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "catch_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "class",
    "named": true,
    "fields": {}
  },
  {
    "type": "class_body",
    "named": true,
    "fields": {}
  },
  {
    "type": "class_heritage",
    "named": true,
    "fields": {}
  },
  {
    "type": "computed_property_name",
    "named": true,
    "fields": {}
  },
  {
    "type": "continue_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "debugger_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "decorator",
    "named": true,
    "fields": {}
  },
  {
    "type": "do_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "empty_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "export_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "export_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "expression_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "finally_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "for_in_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "for_of_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "for_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "formal_parameters",
    "named": true,
    "fields": {}
  },
  {
    "type": "function",
    "named": true,
    "fields": {}
  },
  {
    "type": "generator_function",
    "named": true,
    "fields": {}
  },
  {
    "type": "if_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "import_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "import_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_attribute",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_closing_element",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_element",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_fragment",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_namespace_name",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_opening_element",
    "named": true,
    "fields": {}
  },
  {
    "type": "jsx_self_closing_element",
    "named": true,
    "fields": {}
  },
  {
    "type": "labeled_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "lexical_declaration",
    "named": true,
    "fields": {}
  },
  {
    "type": "member_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "meta_property",
    "named": true,
    "fields": {}
  },
  {
    "type": "method_definition",
    "named": true,
    "fields": {}
  },
  {
    "type": "named_imports",
    "named": true,
    "fields": {}
  },
  {
    "type": "namespace_import",
    "named": true,
    "fields": {}
  },
  {
    "type": "nested_identifier",
    "named": true,
    "fields": {}
  },
  {
    "type": "new_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "object",
    "named": true,
    "fields": {}
  },
  {
    "type": "pair",
    "named": true,
    "fields": {}
  },
  {
    "type": "parenthesized_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "program",
    "named": true,
    "fields": {}
  },
  {
    "type": "public_field_definition",
    "named": true,
    "fields": {}
  },
  {
    "type": "regex",
    "named": true,
    "fields": {}
  },
  {
    "type": "rest_parameter",
    "named": true,
    "fields": {}
  },
  {
    "type": "return_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "sequence_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "spread_element",
    "named": true,
    "fields": {}
  },
  {
    "type": "statement_block",
    "named": true,
    "fields": {}
  },
  {
    "type": "string",
    "named": true,
    "fields": {}
  },
  {
    "type": "subscript_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "switch_body",
    "named": true,
    "fields": {}
  },
  {
    "type": "switch_case",
    "named": true,
    "fields": {}
  },
  {
    "type": "switch_default",
    "named": true,
    "fields": {}
  },
  {
    "type": "switch_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "template_string",
    "named": true,
    "fields": {}
  },
  {
    "type": "template_substitution",
    "named": true,
    "fields": {}
  },
  {
    "type": "ternary_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "throw_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "try_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "unary_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "update_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "variable_declaration",
    "named": true,
    "fields": {}
  },
  {
    "type": "variable_declarator",
    "named": true,
    "fields": {}
  },
  {
    "type": "while_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "with_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "yield_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "hash_bang_line",
    "named": true
  },
  {
    "type": "export",
    "named": false
  },
  {
    "type": "*",
    "named": false
  },
  {
    "type": "default",
    "named": false
  },
  {
    "type": "{",
    "named": false
  },
  {
    "type": ",",
    "named": false
  },
  {
    "type": "}",
    "named": false
  },
  {
    "type": "as",
    "named": false
  },
  {
    "type": "import",
    "named": false
  },
  {
    "type": "from",
    "named": false
  },
  {
    "type": "var",
    "named": false
  },
  {
    "type": "let",
    "named": false
  },
  {
    "type": "const",
    "named": false
  },
  {
    "type": "if",
    "named": false
  },
  {
    "type": "else",
    "named": false
  },
  {
    "type": "switch",
    "named": false
  },
  {
    "type": "for",
    "named": false
  },
  {
    "type": "(",
    "named": false
  },
  {
    "type": ")",
    "named": false
  },
  {
    "type": "in",
    "named": false
  },
  {
    "type": "await",
    "named": false
  },
  {
    "type": "of",
    "named": false
  },
  {
    "type": "while",
    "named": false
  },
  {
    "type": "do",
    "named": false
  },
  {
    "type": "try",
    "named": false
  },
  {
    "type": "with",
    "named": false
  },
  {
    "type": "break",
    "named": false
  },
  {
    "type": "continue",
    "named": false
  },
  {
    "type": "debugger",
    "named": false
  },
  {
    "type": "return",
    "named": false
  },
  {
    "type": "throw",
    "named": false
  },
  {
    "type": ";",
    "named": false
  },
  {
    "type": ":",
    "named": false
  },
  {
    "type": "case",
    "named": false
  },
  {
    "type": "catch",
    "named": false
  },
  {
    "type": "finally",
    "named": false
  },
  {
    "type": "yield",
    "named": false
  },
  {
    "type": "[",
    "named": false
  },
  {
    "type": "]",
    "named": false
  },
  {
    "type": "<",
    "named": false
  },
  {
    "type": ">",
    "named": false
  },
  {
    "type": "/",
    "named": false
  },
  {
    "type": "jsx_text",
    "named": true
  },
  {
    "type": "jsx_identifier",
    "named": true
  },
  {
    "type": ".",
    "named": false
  },
  {
    "type": "=",
    "named": false
  },
  {
    "type": "class",
    "named": false
  },
  {
    "type": "extends",
    "named": false
  },
  {
    "type": "async",
    "named": false
  },
  {
    "type": "function",
    "named": false
  },
  {
    "type": "=>",
    "named": false
  },
  {
    "type": "new",
    "named": false
  },
  {
    "type": "+=",
    "named": false
  },
  {
    "type": "-=",
    "named": false
  },
  {
    "type": "*=",
    "named": false
  },
  {
    "type": "/=",
    "named": false
  },
  {
    "type": "%=",
    "named": false
  },
  {
    "type": "^=",
    "named": false
  },
  {
    "type": "&=",
    "named": false
  },
  {
    "type": "|=",
    "named": false
  },
  {
    "type": ">>=",
    "named": false
  },
  {
    "type": ">>>=",
    "named": false
  },
  {
    "type": "<<=",
    "named": false
  },
  {
    "type": "**=",
    "named": false
  },
  {
    "type": "...",
    "named": false
  },
  {
    "type": "?",
    "named": false
  },
  {
    "type": "&&",
    "named": false
  },
  {
    "type": "||",
    "named": false
  },
  {
    "type": ">>",
    "named": false
  },
  {
    "type": ">>>",
    "named": false
  },
  {
    "type": "<<",
    "named": false
  },
  {
    "type": "&",
    "named": false
  },
  {
    "type": "^",
    "named": false
  },
  {
    "type": "|",
    "named": false
  },
  {
    "type": "+",
    "named": false
  },
  {
    "type": "-",
    "named": false
  },
  {
    "type": "%",
    "named": false
  },
  {
    "type": "**",
    "named": false
  },
  {
    "type": "<=",
    "named": false
  },
  {
    "type": "==",
    "named": false
  },
  {
    "type": "===",
    "named": false
  },
  {
    "type": "!=",
    "named": false
  },
  {
    "type": "!==",
    "named": false
  },
  {
    "type": ">=",
    "named": false
  },
  {
    "type": "instanceof",
    "named": false
  },
  {
    "type": "!",
    "named": false
  },
  {
    "type": "~",
    "named": false
  },
  {
    "type": "typeof",
    "named": false
  },
  {
    "type": "void",
    "named": false
  },
  {
    "type": "delete",
    "named": false
  },
  {
    "type": "++",
    "named": false
  },
  {
    "type": "--",
    "named": false
  },
  {
    "type": "\"",
    "named": false
  },
  {
    "type": "'",
    "named": false
  },
  {
    "type": "escape_sequence",
    "named": true
  },
  {
    "type": "comment",
    "named": true
  },
  {
    "type": "`",
    "named": false
  },
  {
    "type": "${",
    "named": false
  },
  {
    "type": "/",
    "named": false
  },
  {
    "type": "regex_pattern",
    "named": true
  },
  {
    "type": "regex_flags",
    "named": true
  },
  {
    "type": "number",
    "named": true
  },
  {
    "type": "identifier",
    "named": true
  },
  {
    "type": "target",
    "named": false
  },
  {
    "type": "this",
    "named": true
  },
  {
    "type": "super",
    "named": true
  },
  {
    "type": "true",
    "named": true
  },
  {
    "type": "false",
    "named": true
  },
  {
    "type": "null",
    "named": true
  },
  {
    "type": "undefined",
    "named": true
  },
  {
    "type": "@",
    "named": false
  },
  {
    "type": "static",
    "named": false
  },
  {
    "type": "get",
    "named": false
  },
  {
    "type": "set",
    "named": false
  }
]