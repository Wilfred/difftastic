[
  {
    "type": "argument_list",
    "named": true,
    "fields": {}
  },
  {
    "type": "array_comprehension_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "array_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "assignment_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "bare_tuple_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "binary_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "broadcast_call_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "call_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "catch_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "coefficient_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "compound_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "const_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "constrained_parameter",
    "named": true,
    "fields": {}
  },
  {
    "type": "do_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "else_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "elseif_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "export_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "field_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "finally_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "for_binding",
    "named": true,
    "fields": {}
  },
  {
    "type": "for_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "for_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "function_definition",
    "named": true,
    "fields": {}
  },
  {
    "type": "function_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "generator_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "if_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "if_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "import_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "interpolation_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "keyword_parameters",
    "named": true,
    "fields": {}
  },
  {
    "type": "let_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "macro_argument_list",
    "named": true,
    "fields": {}
  },
  {
    "type": "macro_definition",
    "named": true,
    "fields": {}
  },
  {
    "type": "macro_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "macro_identifier",
    "named": true,
    "fields": {}
  },
  {
    "type": "matrix_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "matrix_row",
    "named": true,
    "fields": {}
  },
  {
    "type": "module_definition",
    "named": true,
    "fields": {}
  },
  {
    "type": "named_field",
    "named": true,
    "fields": {}
  },
  {
    "type": "operator",
    "named": true,
    "fields": {}
  },
  {
    "type": "optional_parameter",
    "named": true,
    "fields": {}
  },
  {
    "type": "pair_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "parameter_list",
    "named": true,
    "fields": {}
  },
  {
    "type": "parameterized_identifier",
    "named": true,
    "fields": {}
  },
  {
    "type": "parenthesized_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "quote_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "quote_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "range_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "return_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "scoped_identifier",
    "named": true,
    "fields": {}
  },
  {
    "type": "selected_import",
    "named": true,
    "fields": {}
  },
  {
    "type": "source_file",
    "named": true,
    "fields": {}
  },
  {
    "type": "spread_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "spread_parameter",
    "named": true,
    "fields": {}
  },
  {
    "type": "struct_definition",
    "named": true,
    "fields": {}
  },
  {
    "type": "subscript_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "subtype_clause",
    "named": true,
    "fields": {}
  },
  {
    "type": "ternary_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "try_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "tuple_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "type_argument_list",
    "named": true,
    "fields": {}
  },
  {
    "type": "type_parameter_list",
    "named": true,
    "fields": {}
  },
  {
    "type": "typed_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "typed_parameter",
    "named": true,
    "fields": {}
  },
  {
    "type": "unary_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "variable_declaration",
    "named": true,
    "fields": {}
  },
  {
    "type": "while_statement",
    "named": true,
    "fields": {}
  },
  {
    "type": "function",
    "named": false
  },
  {
    "type": "end",
    "named": false
  },
  {
    "type": "mutable",
    "named": false
  },
  {
    "type": "struct",
    "named": false
  },
  {
    "type": "module",
    "named": false
  },
  {
    "type": "macro",
    "named": false
  },
  {
    "type": "(",
    "named": false
  },
  {
    "type": ",",
    "named": false
  },
  {
    "type": ")",
    "named": false
  },
  {
    "type": ";",
    "named": false
  },
  {
    "type": "=",
    "named": false
  },
  {
    "type": "...",
    "named": false
  },
  {
    "type": "::",
    "named": false
  },
  {
    "type": "{",
    "named": false
  },
  {
    "type": "}",
    "named": false
  },
  {
    "type": "<:",
    "named": false
  },
  {
    "type": "if",
    "named": false
  },
  {
    "type": "elseif",
    "named": false
  },
  {
    "type": "else",
    "named": false
  },
  {
    "type": "try",
    "named": false
  },
  {
    "type": "catch",
    "named": false
  },
  {
    "type": "finally",
    "named": false
  },
  {
    "type": "for",
    "named": false
  },
  {
    "type": "while",
    "named": false
  },
  {
    "type": "break_statement",
    "named": true
  },
  {
    "type": "continue_statement",
    "named": true
  },
  {
    "type": "return",
    "named": false
  },
  {
    "type": "let",
    "named": false
  },
  {
    "type": "const",
    "named": false
  },
  {
    "type": "quote",
    "named": false
  },
  {
    "type": "using",
    "named": false
  },
  {
    "type": "import",
    "named": false
  },
  {
    "type": ":",
    "named": false
  },
  {
    "type": ".",
    "named": false
  },
  {
    "type": "export",
    "named": false
  },
  {
    "type": ":",
    "named": false
  },
  {
    "type": "+",
    "named": false
  },
  {
    "type": "[",
    "named": false
  },
  {
    "type": "]",
    "named": false
  },
  {
    "type": "begin",
    "named": false
  },
  {
    "type": "do",
    "named": false
  },
  {
    "type": ">:",
    "named": false
  },
  {
    "type": "-",
    "named": false
  },
  {
    "type": "!",
    "named": false
  },
  {
    "type": "~",
    "named": false
  },
  {
    "type": "¬",
    "named": false
  },
  {
    "type": "√",
    "named": false
  },
  {
    "type": "∛",
    "named": false
  },
  {
    "type": "∜",
    "named": false
  },
  {
    "type": "'",
    "named": false
  },
  {
    "type": ".'",
    "named": false
  },
  {
    "type": "in",
    "named": false
  },
  {
    "type": "isa",
    "named": false
  },
  {
    "type": "||",
    "named": false
  },
  {
    "type": "&&",
    "named": false
  },
  {
    "type": "?",
    "named": false
  },
  {
    "type": "=>",
    "named": false
  },
  {
    "type": "[",
    "named": false
  },
  {
    "type": "∈",
    "named": false
  },
  {
    "type": "->",
    "named": false
  },
  {
    "type": "$",
    "named": false
  },
  {
    "type": "@",
    "named": false
  },
  {
    "type": "identifier",
    "named": true
  },
  {
    "type": "number",
    "named": true
  },
  {
    "type": "string",
    "named": true
  },
  {
    "type": "command_string",
    "named": true
  },
  {
    "type": "character",
    "named": true
  },
  {
    "type": "\n",
    "named": false
  },
  {
    "type": "comment",
    "named": true
  }
]