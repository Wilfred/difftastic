window.SIDEBAR_ITEMS = {"fn":[["acos","Arccosine (f64)"],["acosf","Arccosine (f32)"],["acosh","Inverse hyperbolic cosine (f64)"],["acoshf","Inverse hyperbolic cosine (f32)"],["asin","Arcsine (f64)"],["asinf","Arcsine (f32)"],["asinh","Inverse hyperbolic sine (f64)"],["asinhf","Inverse hyperbolic sine (f32)"],["atan","Arctangent (f64)"],["atan2","Arctangent of y/x (f64)"],["atan2f","Arctangent of y/x (f32)"],["atanf","Arctangent (f32)"],["atanh","Inverse hyperbolic tangent (f64)"],["atanhf","Inverse hyperbolic tangent (f32)"],["cbrt","Computes the cube root of the argument."],["cbrtf","Cube root (f32)"],["ceil","Ceil (f64)"],["ceilf","Ceil (f32)"],["copysign","Sign of Y, magnitude of X (f64)"],["copysignf","Sign of Y, magnitude of X (f32)"],["cos",""],["cosf",""],["cosh","Hyperbolic cosine (f64)"],["coshf","Hyperbolic cosine (f64)"],["erf","Error function (f64)"],["erfc","Complementary error function (f64)"],["erfcf","Complementary error function (f32)"],["erff","Error function (f32)"],["exp","Exponential, base e (f64)"],["exp10",""],["exp10f",""],["exp2","Exponential, base 2 (f64)"],["exp2f","Exponential, base 2 (f32)"],["expf","Exponential, base e (f32)"],["expm1","Exponential, base e, of x-1 (f64)"],["expm1f","Exponential, base e, of x-1 (f32)"],["fabs","Absolute value (magnitude) (f64) Calculates the absolute value (magnitude) of the argument `x`, by direct manipulation of the bit representation of `x`."],["fabsf","Absolute value (magnitude) (f32) Calculates the absolute value (magnitude) of the argument `x`, by direct manipulation of the bit representation of `x`."],["fdim","Positive difference (f64)"],["fdimf","Positive difference (f32)"],["floor","Floor (f64)"],["floorf","Floor (f32)"],["fma","Floating multiply add (f64)"],["fmaf","Floating multiply add (f32)"],["fmax",""],["fmaxf",""],["fmin",""],["fminf",""],["fmod",""],["fmodf",""],["frexp",""],["frexpf",""],["hypot",""],["hypotf",""],["ilogb",""],["ilogbf",""],["j0",""],["j0f",""],["j1",""],["j1f",""],["jn",""],["jnf",""],["ldexp",""],["ldexpf",""],["lgamma",""],["lgamma_r",""],["lgammaf",""],["lgammaf_r",""],["log",""],["log10",""],["log10f",""],["log1p",""],["log1pf",""],["log2",""],["log2f",""],["logf",""],["modf",""],["modff",""],["nextafter",""],["nextafterf",""],["pow",""],["powf",""],["remainder",""],["remainderf",""],["remquo",""],["remquof",""],["rint",""],["rintf",""],["round",""],["roundf",""],["scalbn",""],["scalbnf",""],["sin",""],["sincos",""],["sincosf",""],["sinf",""],["sinh",""],["sinhf",""],["sqrt",""],["sqrtf",""],["tan",""],["tanf",""],["tanh",""],["tanhf",""],["tgamma",""],["tgammaf",""],["trunc",""],["truncf",""],["y0",""],["y0f",""],["y1",""],["y1f",""],["yn",""],["ynf",""]],"struct":[["Libm","Generic helper for libm functions, abstracting over f32 and f64. "]]};