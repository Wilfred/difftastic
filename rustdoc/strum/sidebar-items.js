window.SIDEBAR_ITEMS = {"derive":[["AsRefStr","Converts enum variants to `&'static str`."],["AsStaticStr",""],["Display","Converts enum variants to strings."],["EnumCount","Add a constant `usize` equal to the number of variants."],["EnumDiscriminants","Generate a new type with only the discriminant names."],["EnumIs","Generated `is_*()` methods for each variant. E.g. `Color.is_red()`."],["EnumIter","Creates a new type that iterates of the variants of an enum."],["EnumMessage","Add a verbose message to an enum variant."],["EnumProperty","Add custom properties to enum variants."],["EnumString","Converts strings to enum variants based on their name."],["EnumVariantNames","Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is an array of discriminant names."],["FromRepr","Add a function to enum that allows accessing variants by its discriminant"],["IntoStaticStr","Implements `From<MyEnum> for &'static str` on an enum."],["ToString","implements `std::string::ToString` on an enum"]],"enum":[["ParseError","The `ParseError` enum is a collection of all the possible reasons an enum can fail to parse from a string."]],"mod":[["additional_attributes","Documentation for Additional Attributes"]],"trait":[["AsStaticRef","A cheap reference-to-reference conversion. Used to convert a value to a reference value with `'static` lifetime within generic code."],["EnumCount","A trait for capturing the number of variants in Enum. This trait can be autoderived by `strum_macros`."],["EnumMessage","Associates additional pieces of information with an Enum. This can be autoimplemented by deriving `EnumMessage` and annotating your variants with `#[strum(message=\"...\")]`."],["EnumProperty","`EnumProperty` is a trait that makes it possible to store additional information with enum variants. This trait is designed to be used with the macro of the same name in the `strum_macros` crate. Currently, the only string literals are supported in attributes, the other methods will be implemented as additional attribute types become stabilized."],["IntoEnumIterator","This trait designates that an `Enum` can be iterated over. It can be auto generated using `strum_macros` on your behalf."],["VariantIterator",""],["VariantMetadata",""],["VariantNames","A trait for retrieving the names of each variant in Enum. This trait can be autoderived by `strum_macros`."]]};