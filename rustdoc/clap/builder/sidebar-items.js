window.SIDEBAR_ITEMS = {"enum":[["AppSettings","Application level settings, which affect how `Command` operates"],["ArgAction","Behavior of arguments when they are encountered while parsing"],["ArgSettings","Various settings that apply to arguments and may be set, unset, and checked via getter/setter methods `Arg::setting`, `Arg::unset_setting`, and `Arg::is_set`. This is what the `Arg` methods which accept a `bool` use internally."],["ValueHint","Provide shell with hint on how to complete an argument."]],"struct":[["App","Deprecated, replaced with [`Command`]"],["Arg","The abstract representation of a command line argument. Used to set all the options and relationships that define a valid argument for the program."],["ArgGroup","Family of related arguments."],["BoolValueParser","Implementation for [`ValueParser::bool`]"],["BoolishValueParser","Parse bool-like string values, everything else is `true`"],["EnumValueParser","Parse an [`ValueEnum`][crate::ValueEnum] value."],["FalseyValueParser","Parse false-like string values, everything else is `true`"],["NonEmptyStringValueParser","Parse non-empty string values"],["OsStringValueParser","Implementation for [`ValueParser::os_string`]"],["PathBufValueParser","Implementation for [`ValueParser::path_buf`]"],["PossibleValue","A possible value of an argument."],["PossibleValuesParser","Verify the value is from an enumerated set of [`PossibleValue`][crate::PossibleValue]."],["RangedI64ValueParser","Parse number that fall within a range of values"],["RangedU64ValueParser","Parse number that fall within a range of values"],["StringValueParser","Implementation for [`ValueParser::string`]"],["ValueParser","Parse/validate argument values"]],"trait":[["TypedValueParser","Parse/validate argument values"],["ValueParserFactory","Register a type with [value_parser!][crate::value_parser!]"]],"type":[["Command","Build a command-line interface."]]};