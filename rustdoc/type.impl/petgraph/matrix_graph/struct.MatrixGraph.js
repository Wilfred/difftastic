(function() {var type_impls = {
"petgraph":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#224-525\">source</a><a href=\"#impl-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#228-244\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(node_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <code>MatrixGraph</code> with estimated capacity for nodes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#260-266\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all nodes and edges.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_count\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#272-274\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.node_count\" class=\"fn\">node_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of nodes (vertices) in the graph.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_count\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#280-282\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.edge_count\" class=\"fn\">edge_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of edges in the graph.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_directed\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#286-288\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.is_directed\" class=\"fn\">is_directed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return whether the graph has directed edges or not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_node\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#297-299\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.add_node\" class=\"fn\">add_node</a>(&amp;mut self, weight: N) -&gt; <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Add a node (also called vertex) with associated data <code>weight</code> to the graph.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n<p>Return the index of the new node.</p>\n<p><strong>Panics</strong> if the MatrixGraph is at the maximum number of nodes for its index type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_node\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#306-322\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.remove_node\" class=\"fn\">remove_node</a>(&amp;mut self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; N</h4></section></summary><div class=\"docblock\"><p>Remove <code>a</code> from the graph.</p>\n<p>Computes in <strong>O(V)</strong> time, due to the removal of edges with other nodes.</p>\n<p><strong>Panics</strong> if the node <code>a</code> does not exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#350-358\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.update_edge\" class=\"fn\">update_edge</a>(\n    &amp;mut self,\n    a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    b: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    weight: E\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;E&gt;</h4></section></summary><div class=\"docblock\"><p>Update the edge from <code>a</code> to <code>b</code> to the graph, with its associated data <code>weight</code>.</p>\n<p>Return the previous data, if any.</p>\n<p>Computes in <strong>O(1)</strong> time, best case.\nComputes in <strong>O(|V|^2)</strong> time, worst case (matrix needs to be re-allocated).</p>\n<p><strong>Panics</strong> if any of the nodes don’t exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#371-374\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.add_edge\" class=\"fn\">add_edge</a>(&amp;mut self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, b: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, weight: E)</h4></section></summary><div class=\"docblock\"><p>Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated\ndata <code>weight</code>.</p>\n<p>Computes in <strong>O(1)</strong> time, best case.\nComputes in <strong>O(|V|^2)</strong> time, worst case (matrix needs to be re-allocated).</p>\n<p><strong>Panics</strong> if any of the nodes don’t exist.\n<strong>Panics</strong> if an edge already exists from <code>a</code> to <code>b</code>.</p>\n<p><strong>Note:</strong> <code>MatrixGraph</code> does not allow adding parallel (“duplicate”) edges. If you want to avoid\nthis, use <a href=\"#method.update_edge\"><code>.update_edge(a, b, weight)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#380-388\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.remove_edge\" class=\"fn\">remove_edge</a>(&amp;mut self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, b: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; E</h4></section></summary><div class=\"docblock\"><p>Remove the edge from <code>a</code> to <code>b</code> to the graph.</p>\n<p><strong>Panics</strong> if any of the nodes don’t exist.\n<strong>Panics</strong> if no edge exists between <code>a</code> and <code>b</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#393-398\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.has_edge\" class=\"fn\">has_edge</a>(&amp;self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, b: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return true if there is an edge between <code>a</code> and <code>b</code>.</p>\n<p><strong>Panics</strong> if any of the nodes don’t exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_weight\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#405-407\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.node_weight\" class=\"fn\">node_weight</a>(&amp;self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;N</a></h4></section></summary><div class=\"docblock\"><p>Access the weight for node <code>a</code>.</p>\n<p>Also available with indexing syntax: <code>&amp;graph[a]</code>.</p>\n<p><strong>Panics</strong> if the node doesn’t exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_weight_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#414-416\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.node_weight_mut\" class=\"fn\">node_weight_mut</a>(&amp;mut self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut N</a></h4></section></summary><div class=\"docblock\"><p>Access the weight for node <code>a</code>, mutably.</p>\n<p>Also available with indexing syntax: <code>&amp;mut graph[a]</code>.</p>\n<p><strong>Panics</strong> if the node doesn’t exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_weight\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#423-430\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.edge_weight\" class=\"fn\">edge_weight</a>(&amp;self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, b: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;E</a></h4></section></summary><div class=\"docblock\"><p>Access the weight for edge <code>e</code>.</p>\n<p>Also available with indexing syntax: <code>&amp;graph[e]</code>.</p>\n<p><strong>Panics</strong> if no edge exists between <code>a</code> and <code>b</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_weight_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#437-444\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.edge_weight_mut\" class=\"fn\">edge_weight_mut</a>(&amp;mut self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, b: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut E</a></h4></section></summary><div class=\"docblock\"><p>Access the weight for edge <code>e</code>, mutably.</p>\n<p>Also available with indexing syntax: <code>&amp;mut graph[e]</code>.</p>\n<p><strong>Panics</strong> if no edge exists between <code>a</code> and <code>b</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neighbors\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#453-459\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.neighbors\" class=\"fn\">neighbors</a>(&amp;self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Neighbors.html\" title=\"struct petgraph::matrix_graph::Neighbors\">Neighbors</a>&lt;'_, Ty, Null, Ix&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Neighbors&lt;&#39;_, Ty, Null, Ix&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return an iterator of all nodes with an edge starting from <code>a</code>.</p>\n<ul>\n<li><code>Directed</code>: Outgoing edges from <code>a</code>.</li>\n<li><code>Undirected</code>: All edges from or to <code>a</code>.</li>\n</ul>\n<p>Produces an empty iterator if the node doesn’t exist.<br>\nIterator element type is <a href=\"../graph/struct.NodeIndex.html\"><code>NodeIndex&lt;Ix&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edges\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#468-470\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.edges\" class=\"fn\">edges</a>(&amp;self, a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Edges.html\" title=\"struct petgraph::matrix_graph::Edges\">Edges</a>&lt;'_, Ty, Null, Ix&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Edges&lt;&#39;_, Ty, Null, Ix&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return an iterator of all edges of <code>a</code>.</p>\n<ul>\n<li><code>Directed</code>: Outgoing edges from <code>a</code>.</li>\n<li><code>Undirected</code>: All edges connected to <code>a</code>.</li>\n</ul>\n<p>Produces an empty iterator if the node doesn’t exist.<br>\nIterator element type is <code>(NodeIndex&lt;Ix&gt;, NodeIndex&lt;Ix&gt;, &amp;E)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_edges\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#489-499\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.from_edges\" class=\"fn\">from_edges</a>&lt;I&gt;(iterable: I) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>: <a class=\"trait\" href=\"petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt;,\n    &lt;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a> as <a class=\"trait\" href=\"petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt;&gt;::<a class=\"associatedtype\" href=\"petgraph/trait.IntoWeightedEdge.html#associatedtype.NodeId\" title=\"type petgraph::IntoWeightedEdge::NodeId\">NodeId</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;&gt;,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Create a new <code>MatrixGraph</code> from an iterable of edges.</p>\n<p>Node weights <code>N</code> are set to default values.\nEdge weights <code>E</code> may either be specified in the list,\nor they are filled with default values.</p>\n<p>Nodes are inserted automatically to match the edges.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>petgraph::matrix_graph::MatrixGraph;\n\n<span class=\"kw\">let </span>gr = MatrixGraph::&lt;(), i32&gt;::from_edges(<span class=\"kw-2\">&amp;</span>[\n    (<span class=\"number\">0</span>, <span class=\"number\">1</span>), (<span class=\"number\">0</span>, <span class=\"number\">2</span>), (<span class=\"number\">0</span>, <span class=\"number\">3</span>),\n    (<span class=\"number\">1</span>, <span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"number\">3</span>),\n    (<span class=\"number\">2</span>, <span class=\"number\">3</span>),\n]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_with_edges\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#508-524\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.extend_with_edges\" class=\"fn\">extend_with_edges</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>: <a class=\"trait\" href=\"petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt;,\n    &lt;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a> as <a class=\"trait\" href=\"petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt;&gt;::<a class=\"associatedtype\" href=\"petgraph/trait.IntoWeightedEdge.html#associatedtype.NodeId\" title=\"type petgraph::IntoWeightedEdge::NodeId\">NodeId</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;&gt;,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Extend the graph from an iterable of edges.</p>\n<p>Node weights <code>N</code> are set to default values.\nEdge weights <code>E</code> may either be specified in the list,\nor they are filled with default values.</p>\n<p>Nodes are inserted automatically to match the edges.</p>\n</div></details></div></details>",0,"petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MatrixGraph%3CN,+E,+Directed,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#527-567\">source</a><a href=\"#impl-MatrixGraph%3CN,+E,+Directed,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a>, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.neighbors_directed\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#537-551\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.neighbors_directed\" class=\"fn\">neighbors_directed</a>(\n    &amp;self,\n    a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    d: <a class=\"enum\" href=\"petgraph/enum.Direction.html\" title=\"enum petgraph::Direction\">Direction</a>\n) -&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Neighbors.html\" title=\"struct petgraph::matrix_graph::Neighbors\">Neighbors</a>&lt;'_, <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a>, Null, Ix&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Neighbors&lt;&#39;_, Directed, Null, Ix&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return an iterator of all neighbors that have an edge between them and\n<code>a</code>, in the specified direction.\nIf the graph’s edges are undirected, this is equivalent to <em>.neighbors(a)</em>.</p>\n<ul>\n<li><code>Outgoing</code>: All edges from <code>a</code>.</li>\n<li><code>Incoming</code>: All edges to <code>a</code>.</li>\n</ul>\n<p>Produces an empty iterator if the node doesn’t exist.<br>\nIterator element type is <a href=\"../graph/struct.NodeIndex.html\"><code>NodeIndex&lt;Ix&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edges_directed\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#560-566\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.edges_directed\" class=\"fn\">edges_directed</a>(\n    &amp;self,\n    a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    d: <a class=\"enum\" href=\"petgraph/enum.Direction.html\" title=\"enum petgraph::Direction\">Direction</a>\n) -&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Edges.html\" title=\"struct petgraph::matrix_graph::Edges\">Edges</a>&lt;'_, <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a>, Null, Ix&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Edges&lt;&#39;_, Directed, Null, Ix&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return an iterator of all edges of <code>a</code>, in the specified direction.</p>\n<ul>\n<li><code>Outgoing</code>: All edges from <code>a</code>.</li>\n<li><code>Incoming</code>: All edges to <code>a</code>.</li>\n</ul>\n<p>Produces an empty iterator if the node <code>a</code> doesn’t exist.<br>\nIterator element type is <code>(NodeIndex&lt;Ix&gt;, NodeIndex&lt;Ix&gt;, &amp;E)</code>.</p>\n</div></details></div></details>",0,"petgraph::matrix_graph::DiMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MatrixGraph%3CN,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1024-1032\">source</a><a href=\"#impl-MatrixGraph%3CN,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1029-1031\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <code>MatrixGraph</code> with directed edges.</p>\n<p>This is a convenience method. Use <code>MatrixGraph::with_capacity</code> or <code>MatrixGraph::default</code> for\na constructor that is generic in all the type parameters of <code>MatrixGraph</code>.</p>\n</div></details></div></details>",0,"petgraph::matrix_graph::DiMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MatrixGraph%3CN,+E,+Undirected%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1034-1042\">source</a><a href=\"#impl-MatrixGraph%3CN,+E,+Undirected%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, <a class=\"enum\" href=\"petgraph/enum.Undirected.html\" title=\"enum petgraph::Undirected\">Undirected</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_undirected\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1039-1041\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/matrix_graph/struct.MatrixGraph.html#tymethod.new_undirected\" class=\"fn\">new_undirected</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <code>MatrixGraph</code> with undirected edges.</p>\n<p>This is a convenience method. Use <code>MatrixGraph::with_capacity</code> or <code>MatrixGraph::default</code> for\na constructor that is generic in all the type parameters of <code>MatrixGraph</code>.</p>\n</div></details></div></details>",0,"petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CNodeIndex%3CIx%3E%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1047-1055\">source</a><a href=\"#impl-Index%3CNodeIndex%3CIx%3E%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;&gt; for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"docblock\"><p>Index the <code>MatrixGraph</code> by <code>NodeIndex</code> to access node weights.</p>\n<p><strong>Panics</strong> if the node doesn’t exist.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = N</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1052-1054\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, ax: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;N</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<NodeIndex<Ix>>","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetAdjacencyMatrix-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1113-1123\">source</a><a href=\"#impl-GetAdjacencyMatrix-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.GetAdjacencyMatrix.html\" title=\"trait petgraph::visit::GetAdjacencyMatrix\">GetAdjacencyMatrix</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AdjMatrix\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AdjMatrix\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#associatedtype.AdjMatrix\" class=\"associatedtype\">AdjMatrix</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The associated adjacency matrix type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.adjacency_matrix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1118\">source</a><a href=\"#method.adjacency_matrix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#tymethod.adjacency_matrix\" class=\"fn\">adjacency_matrix</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#associatedtype.AdjMatrix\" title=\"type petgraph::visit::GetAdjacencyMatrix::AdjMatrix\">AdjMatrix</a></h4></section></summary><div class='docblock'>Create the adjacency matrix</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_adjacent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1120-1122\">source</a><a href=\"#method.is_adjacent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#tymethod.is_adjacent\" class=\"fn\">is_adjacent</a>(\n    &amp;self,\n    _: &amp;Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#associatedtype.AdjMatrix\" title=\"type petgraph::visit::GetAdjacencyMatrix::AdjMatrix\">AdjMatrix</a>,\n    a: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    b: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if there is an edge from <code>a</code> to <code>b</code>, false otherwise. <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#tymethod.is_adjacent\">Read more</a></div></details></div></details>","GetAdjacencyMatrix","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(NodeIndex%3CIx%3E,+NodeIndex%3CIx%3E)%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1090-1098\">source</a><a href=\"#impl-Index%3C(NodeIndex%3CIx%3E,+NodeIndex%3CIx%3E)%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;(<a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;)&gt; for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"docblock\"><p>Index the <code>MatrixGraph</code> by <code>NodeIndex</code> pair to access edge weights.</p>\n<p>Also available with indexing syntax: <code>&amp;graph[e]</code>.</p>\n<p><strong>Panics</strong> if no edge exists between <code>a</code> and <code>b</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = E</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1095-1097\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, (ax, bx): (<a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;)) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;E</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(NodeIndex<Ix>, NodeIndex<Ix>)>","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Visitable-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1125-1138\">source</a><a href=\"#impl-Visitable-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.Visitable.html\" title=\"trait petgraph::visit::Visitable\">Visitable</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Map\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Map\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.Visitable.html#associatedtype.Map\" class=\"associatedtype\">Map</a> = <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a></h4></section></summary><div class='docblock'>The associated map type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1130-1132\">source</a><a href=\"#method.visit_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.Visitable.html#tymethod.visit_map\" class=\"fn\">visit_map</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a></h4></section></summary><div class='docblock'>Create a new visitor map</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1134-1137\">source</a><a href=\"#method.reset_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.Visitable.html#tymethod.reset_map\" class=\"fn\">reset_map</a>(&amp;self, map: &amp;mut Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.Visitable.html#associatedtype.Map\" title=\"type petgraph::visit::Visitable::Map\">Map</a>)</h4></section></summary><div class='docblock'>Reset the visitor map (and resize to new size of graph if needed)</div></details></div></details>","Visitable","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3C(NodeIndex%3CIx%3E,+NodeIndex%3CIx%3E)%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1105-1111\">source</a><a href=\"#impl-IndexMut%3C(NodeIndex%3CIx%3E,+NodeIndex%3CIx%3E)%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;(<a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;)&gt; for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"docblock\"><p>Index the <code>MatrixGraph</code> by <code>NodeIndex</code> pair to access edge weights.</p>\n<p>Also available with indexing syntax: <code>&amp;mut graph[e]</code>.</p>\n<p><strong>Panics</strong> if no edge exists between <code>a</code> and <code>b</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1108-1110\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, (ax, bx): (<a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;)) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut E</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<(NodeIndex<Ix>, NodeIndex<Ix>)>","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NodeCount-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1068-1074\">source</a><a href=\"#impl-NodeCount-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.NodeCount.html\" title=\"trait petgraph::visit::NodeCount\">NodeCount</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.node_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1071-1073\">source</a><a href=\"#method.node_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeCount.html#tymethod.node_count\" class=\"fn\">node_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","NodeCount","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CNodeIndex%3CIx%3E%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1060-1066\">source</a><a href=\"#impl-IndexMut%3CNodeIndex%3CIx%3E%3E-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;&gt; for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"docblock\"><p>Index the <code>MatrixGraph</code> by <code>NodeIndex</code> to access node weights.</p>\n<p><strong>Panics</strong> if the node doesn’t exist.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1063-1065\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, ax: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut N</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.76.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<NodeIndex<Ix>>","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NodeIndexable-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1229-1243\">source</a><a href=\"#impl-NodeIndexable-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.NodeIndexable.html\" title=\"trait petgraph::visit::NodeIndexable\">NodeIndexable</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1232-1234\">source</a><a href=\"#method.node_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeIndexable.html#tymethod.node_bound\" class=\"fn\">node_bound</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return an upper bound of the node indices in the graph\n(suitable for the size of a bitmap).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1236-1238\">source</a><a href=\"#method.to_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeIndexable.html#tymethod.to_index\" class=\"fn\">to_index</a>(&amp;self, ix: <a class=\"type\" href=\"petgraph/matrix_graph/type.NodeIndex.html\" title=\"type petgraph::matrix_graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert <code>a</code> to an integer index.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1240-1242\">source</a><a href=\"#method.from_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeIndexable.html#tymethod.from_index\" class=\"fn\">from_index</a>(&amp;self, ix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a></h4></section></summary><div class='docblock'>Convert <code>i</code> to a node index. <code>i</code> must be a valid value in the graph.</div></details></div></details>","NodeIndexable","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Data-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1153-1158\">source</a><a href=\"#impl-Data-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.Data.html\" title=\"trait petgraph::visit::Data\">Data</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.NodeWeight\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeWeight\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.Data.html#associatedtype.NodeWeight\" class=\"associatedtype\">NodeWeight</a> = N</h4></section><section id=\"associatedtype.EdgeWeight\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EdgeWeight\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.Data.html#associatedtype.EdgeWeight\" class=\"associatedtype\">EdgeWeight</a> = E</h4></section></div></details>","Data","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Build-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1245-1275\">source</a><a href=\"#impl-Build-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/data/trait.Build.html\" title=\"trait petgraph::data::Build\">Build</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.add_node\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1248-1250\">source</a><a href=\"#method.add_node\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.Build.html#tymethod.add_node\" class=\"fn\">add_node</a>(&amp;mut self, weight: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.Data.html#associatedtype.NodeWeight\" title=\"type petgraph::visit::Data::NodeWeight\">NodeWeight</a>) -&gt; Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1252-1264\">source</a><a href=\"#method.add_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.Build.html#method.add_edge\" class=\"fn\">add_edge</a>(\n    &amp;mut self,\n    a: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>,\n    b: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>,\n    weight: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.Data.html#associatedtype.EdgeWeight\" title=\"type petgraph::visit::Data::EdgeWeight\">EdgeWeight</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.EdgeId\" title=\"type petgraph::visit::GraphBase::EdgeId\">EdgeId</a>&gt;</h4></section></summary><div class='docblock'>Add a new edge. If parallel edges (duplicate) are not allowed and\nthe edge already exists, return <code>None</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1266-1274\">source</a><a href=\"#method.update_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.Build.html#tymethod.update_edge\" class=\"fn\">update_edge</a>(\n    &amp;mut self,\n    a: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>,\n    b: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>,\n    weight: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.Data.html#associatedtype.EdgeWeight\" title=\"type petgraph::visit::Data::EdgeWeight\">EdgeWeight</a>\n) -&gt; Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.EdgeId\" title=\"type petgraph::visit::GraphBase::EdgeId\">EdgeId</a></h4></section></summary><div class='docblock'>Add or update the edge from <code>a</code> to <code>b</code>. Return the id of the affected\nedge.</div></details></div></details>","Build","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GraphProp-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1147-1151\">source</a><a href=\"#impl-GraphProp-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.GraphProp.html\" title=\"trait petgraph::visit::GraphProp\">GraphProp</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.EdgeType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EdgeType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GraphProp.html#associatedtype.EdgeType\" class=\"associatedtype\">EdgeType</a> = Ty</h4></section></summary><div class='docblock'>The kind of edges in the graph.</div></details><section id=\"method.is_directed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/visit/mod.rs.html#329-331\">source</a><a href=\"#method.is_directed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.GraphProp.html#method.is_directed\" class=\"fn\">is_directed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","GraphProp","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EdgeCount-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1076-1083\">source</a><a href=\"#impl-EdgeCount-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.EdgeCount.html\" title=\"trait petgraph::visit::EdgeCount\">EdgeCount</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1080-1082\">source</a><a href=\"#method.edge_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.EdgeCount.html#tymethod.edge_count\" class=\"fn\">edge_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the number of edges in the graph.</div></details></div></details>","EdgeCount","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GraphBase-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1140-1145\">source</a><a href=\"#impl-GraphBase-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.GraphBase.html\" title=\"trait petgraph::visit::GraphBase\">GraphBase</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.NodeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" class=\"associatedtype\">NodeId</a> = <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;</h4></section></summary><div class='docblock'>node identifier</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.EdgeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EdgeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GraphBase.html#associatedtype.EdgeId\" class=\"associatedtype\">EdgeId</a> = (<a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt;)</h4></section></summary><div class='docblock'>edge identifier</div></details></div></details>","GraphBase","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1016-1022\">source</a><a href=\"#impl-Default-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N, E, Ty: <a class=\"trait\" href=\"petgraph/trait.EdgeType.html\" title=\"trait petgraph::EdgeType\">EdgeType</a>, Null: <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"docblock\"><p>Create a new empty <code>MatrixGraph</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#1019-1021\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#207\">source</a><a href=\"#impl-Clone-for-MatrixGraph%3CN,+E,+Ty,+Null,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Ty: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Null: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Nullable.html\" title=\"trait petgraph::matrix_graph::Nullable\">Nullable</a>&lt;Wrapped = E&gt;, Ix: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#207\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","petgraph::matrix_graph::DiMatrix","petgraph::matrix_graph::UnMatrix"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()