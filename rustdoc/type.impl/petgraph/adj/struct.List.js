(function() {var type_impls = {
"petgraph":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#165-322\">source</a><a href=\"#impl-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#167-169\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new, empty adjacency list.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#172-176\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(nodes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new, empty adjacency list tailored for <code>nodes</code> nodes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#179-181\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Removes all nodes and edges from the list.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_count\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#186-188\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.edge_count\" class=\"fn\">edge_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of edges in the list</p>\n<p>Computes in <strong>O(|V|)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_node\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#192-196\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.add_node\" class=\"fn\">add_node</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a new node to the list. This allocates a new <code>Vec</code> and then should\nrun in amortized <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_node_with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#200-204\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.add_node_with_capacity\" class=\"fn\">add_node_with_capacity</a>(&amp;mut self, successors: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a new node to the list. This allocates a new <code>Vec</code> and then should\nrun in amortized <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_node_from_edges\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#208-216\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.add_node_from_edges\" class=\"fn\">add_node_from_edges</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (<a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, E)&gt;&gt;(\n    &amp;mut self,\n    edges: I\n) -&gt; <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a new node to the list by giving its list of successors and the corresponding\nweigths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#229-244\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.add_edge\" class=\"fn\">add_edge</a>(\n    &amp;mut self,\n    a: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    b: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    weight: E\n) -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated\ndata <code>weight</code>.</p>\n<p>Return the index of the new edge.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n<p><strong>Panics</strong> if the source node does not exist.<br></p>\n<p><strong>Note:</strong> <code>List</code> allows adding parallel (“duplicate”) edges. If you want\nto avoid this, use <a href=\"#method.update_edge\"><code>.update_edge(a, b, weight)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_endpoints\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#261-263\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.edge_endpoints\" class=\"fn\">edge_endpoints</a>(\n    &amp;self,\n    e: <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Accesses the source and target of edge <code>e</code></p>\n<p>Computes in <strong>O(1)</strong></p>\n</div></details><section id=\"method.edge_indices_from\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#265-275\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.edge_indices_from\" class=\"fn\">edge_indices_from</a>(&amp;self, a: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.OutgoingEdgeIndices.html\" title=\"struct petgraph::adj::OutgoingEdgeIndices\">OutgoingEdgeIndices</a>&lt;Ix&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"OutgoingEdgeIndices&lt;Ix&gt;\">ⓘ</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#280-285\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.contains_edge\" class=\"fn\">contains_edge</a>(&amp;self, a: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;, b: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Lookups whether there is an edge from <code>a</code> to <code>b</code>.</p>\n<p>Computes in <strong>O(e’)</strong> time, where <strong>e’</strong> is the number of successors of <code>a</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#290-300\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.find_edge\" class=\"fn\">find_edge</a>(\n    &amp;self,\n    a: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    b: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Lookups whether there is an edge from <code>a</code> to <code>b</code>.</p>\n<p>Computes in <strong>O(e’)</strong> time, where <strong>e’</strong> is the number of successors of <code>a</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#305-309\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.node_indices\" class=\"fn\">node_indices</a>(&amp;self) -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.NodeIndices.html\" title=\"struct petgraph::adj::NodeIndices\">NodeIndices</a>&lt;Ix&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"NodeIndices&lt;Ix&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator over all node indices of the graph.</p>\n<p>Consuming the whole iterator take <strong>O(|V|)</strong>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_indices\" class=\"method\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#314-321\">source</a><h4 class=\"code-header\">pub fn <a href=\"petgraph/adj/struct.List.html#tymethod.edge_indices\" class=\"fn\">edge_indices</a>(&amp;self) -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndices.html\" title=\"struct petgraph::adj::EdgeIndices\">EdgeIndices</a>&lt;'_, E, Ix&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"EdgeIndices&lt;&#39;_, E, Ix&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator over all edge indices of the graph.</p>\n<p>Consuming the whole iterator take <strong>O(|V| + |E|)</strong>.</p>\n</div></details></div></details>",0,"petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataMap-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#597-612\">source</a><a href=\"#impl-DataMap-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/data/trait.DataMap.html\" title=\"trait petgraph::data::DataMap\">DataMap</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_weight\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#609-611\">source</a><a href=\"#method.edge_weight\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.DataMap.html#tymethod.edge_weight\" class=\"fn\">edge_weight</a>(&amp;self, e: <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;E</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Accesses the weight of edge <code>e</code></p>\n<p>Computes in <strong>O(1)</strong></p>\n</div></details><section id=\"method.node_weight\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#598-604\">source</a><a href=\"#method.node_weight\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.DataMap.html#tymethod.node_weight\" class=\"fn\">node_weight</a>(&amp;self, n: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","DataMap","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#157\">source</a><a href=\"#impl-Default-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, Ix&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;<div class=\"where\">where\n    Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#157\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#399-413\">source</a><a href=\"#impl-Debug-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#404-412\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetAdjacencyMatrix-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#635-659\">source</a><a href=\"#impl-GetAdjacencyMatrix-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix&gt; <a class=\"trait\" href=\"petgraph/visit/trait.GetAdjacencyMatrix.html\" title=\"trait petgraph::visit::GetAdjacencyMatrix\">GetAdjacencyMatrix</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;<div class=\"where\">where\n    Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>,</div></h3></section></summary><div class=\"docblock\"><p>The adjacency matrix for <strong>List</strong> is a bitmap that’s computed by\n<code>.adjacency_matrix()</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AdjMatrix\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AdjMatrix\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#associatedtype.AdjMatrix\" class=\"associatedtype\">AdjMatrix</a> = <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a></h4></section></summary><div class='docblock'>The associated adjacency matrix type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.adjacency_matrix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#641-652\">source</a><a href=\"#method.adjacency_matrix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#tymethod.adjacency_matrix\" class=\"fn\">adjacency_matrix</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a></h4></section></summary><div class='docblock'>Create the adjacency matrix</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_adjacent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#654-658\">source</a><a href=\"#method.is_adjacent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#tymethod.is_adjacent\" class=\"fn\">is_adjacent</a>(\n    &amp;self,\n    matrix: &amp;<a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a>,\n    a: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    b: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if there is an edge from <code>a</code> to <code>b</code>, false otherwise. <a href=\"petgraph/visit/trait.GetAdjacencyMatrix.html#tymethod.is_adjacent\">Read more</a></div></details></div></details>","GetAdjacencyMatrix","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NodeIndexable-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#581-593\">source</a><a href=\"#impl-NodeIndexable-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.NodeIndexable.html\" title=\"trait petgraph::visit::NodeIndexable\">NodeIndexable</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#582-584\">source</a><a href=\"#method.node_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeIndexable.html#tymethod.node_bound\" class=\"fn\">node_bound</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return an upper bound of the node indices in the graph\n(suitable for the size of a bitmap).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#586-588\">source</a><a href=\"#method.to_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeIndexable.html#tymethod.to_index\" class=\"fn\">to_index</a>(&amp;self, a: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert <code>a</code> to an integer index.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#590-592\">source</a><a href=\"#method.from_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeIndexable.html#tymethod.from_index\" class=\"fn\">from_index</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a></h4></section></summary><div class='docblock'>Convert <code>i</code> to a node index. <code>i</code> must be a valid value in the graph.</div></details></div></details>","NodeIndexable","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Data-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#463-466\">source</a><a href=\"#impl-Data-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.Data.html\" title=\"trait petgraph::visit::Data\">Data</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.NodeWeight\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeWeight\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.Data.html#associatedtype.NodeWeight\" class=\"associatedtype\">NodeWeight</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a></h4></section><section id=\"associatedtype.EdgeWeight\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EdgeWeight\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.Data.html#associatedtype.EdgeWeight\" class=\"associatedtype\">EdgeWeight</a> = E</h4></section></div></details>","Data","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NodeCount-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#563-570\">source</a><a href=\"#impl-NodeCount-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.NodeCount.html\" title=\"trait petgraph::visit::NodeCount\">NodeCount</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#567-569\">source</a><a href=\"#method.node_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.NodeCount.html#tymethod.node_count\" class=\"fn\">node_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of nodes in the list</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details></div></details>","NodeCount","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EdgeCount-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#572-579\">source</a><a href=\"#impl-EdgeCount-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.EdgeCount.html\" title=\"trait petgraph::visit::EdgeCount\">EdgeCount</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#576-578\">source</a><a href=\"#method.edge_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.EdgeCount.html#tymethod.edge_count\" class=\"fn\">edge_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of edges in the list</p>\n<p>Computes in <strong>O(|V|)</strong> time.</p>\n</div></details></div></details>","EdgeCount","petgraph::adj::UnweightedList"],["<section id=\"impl-NodeCompactIndexable-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#595\">source</a><a href=\"#impl-NodeCompactIndexable-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.NodeCompactIndexable.html\" title=\"trait petgraph::visit::NodeCompactIndexable\">NodeCompactIndexable</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section>","NodeCompactIndexable","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Visitable-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#423-435\">source</a><a href=\"#impl-Visitable-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix&gt; <a class=\"trait\" href=\"petgraph/visit/trait.Visitable.html\" title=\"trait petgraph::visit::Visitable\">Visitable</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;<div class=\"where\">where\n    Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Map\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Map\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.Visitable.html#associatedtype.Map\" class=\"associatedtype\">Map</a> = <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a></h4></section></summary><div class='docblock'>The associated map type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#428-430\">source</a><a href=\"#method.visit_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.Visitable.html#tymethod.visit_map\" class=\"fn\">visit_map</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a></h4></section></summary><div class='docblock'>Create a new visitor map</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#431-434\">source</a><a href=\"#method.reset_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.Visitable.html#tymethod.reset_map\" class=\"fn\">reset_map</a>(&amp;self, map: &amp;mut Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.Visitable.html#associatedtype.Map\" title=\"type petgraph::visit::Visitable::Map\">Map</a>)</h4></section></summary><div class='docblock'>Reset the visitor map (and resize to new size of graph if needed)</div></details></div></details>","Visitable","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Build-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#327-375\">source</a><a href=\"#impl-Build-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/data/trait.Build.html\" title=\"trait petgraph::data::Build\">Build</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_node\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#330-332\">source</a><a href=\"#method.add_node\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.Build.html#tymethod.add_node\" class=\"fn\">add_node</a>(&amp;mut self, _weight: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>) -&gt; <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a new node to the list. This allocates a new <code>Vec</code> and then should\nrun in amortized <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#345-347\">source</a><a href=\"#method.add_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.Build.html#method.add_edge\" class=\"fn\">add_edge</a>(\n    &amp;mut self,\n    a: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    b: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    weight: E\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated\ndata <code>weight</code>.</p>\n<p>Return the index of the new edge.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n<p><strong>Panics</strong> if the source node does not exist.<br></p>\n<p><strong>Note:</strong> <code>List</code> allows adding parallel (“duplicate”) edges. If you want\nto avoid this, use <a href=\"#method.update_edge\"><code>.update_edge(a, b, weight)</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#357-374\">source</a><a href=\"#method.update_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.Build.html#tymethod.update_edge\" class=\"fn\">update_edge</a>(\n    &amp;mut self,\n    a: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    b: <a class=\"type\" href=\"petgraph/adj/type.NodeIndex.html\" title=\"type petgraph::adj::NodeIndex\">NodeIndex</a>&lt;Ix&gt;,\n    weight: E\n) -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;</h4></section></summary><div class=\"docblock\"><p>Updates or adds an edge from <code>a</code> to <code>b</code> to the graph, with its associated\ndata <code>weight</code>.</p>\n<p>Return the index of the new edge.</p>\n<p>Computes in <strong>O(e’)</strong> time, where <strong>e’</strong> is the number of successors of <code>a</code>.</p>\n<p><strong>Panics</strong> if the source node does not exist.<br></p>\n</div></details></div></details>","Build","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GraphProp-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#556-561\">source</a><a href=\"#impl-GraphProp-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/visit/trait.GraphProp.html\" title=\"trait petgraph::visit::GraphProp\">GraphProp</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.EdgeType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EdgeType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GraphProp.html#associatedtype.EdgeType\" class=\"associatedtype\">EdgeType</a> = <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a></h4></section></summary><div class='docblock'>The kind of edges in the graph.</div></details><section id=\"method.is_directed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#558-560\">source</a><a href=\"#method.is_directed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/visit/trait.GraphProp.html#method.is_directed\" class=\"fn\">is_directed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","GraphProp","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GraphBase-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#415-421\">source</a><a href=\"#impl-GraphBase-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix&gt; <a class=\"trait\" href=\"petgraph/visit/trait.GraphBase.html\" title=\"trait petgraph::visit::GraphBase\">GraphBase</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;<div class=\"where\">where\n    Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.NodeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" class=\"associatedtype\">NodeId</a> = Ix</h4></section></summary><div class='docblock'>node identifier</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.EdgeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EdgeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"petgraph/visit/trait.GraphBase.html#associatedtype.EdgeId\" class=\"associatedtype\">EdgeId</a> = <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;</h4></section></summary><div class='docblock'>edge identifier</div></details></div></details>","GraphBase","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#157\">source</a><a href=\"#impl-Clone-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Ix&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;<div class=\"where\">where\n    Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#157\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","petgraph::adj::UnweightedList"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataMapMut-for-List%3CE,+Ix%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#614-631\">source</a><a href=\"#impl-DataMapMut-for-List%3CE,+Ix%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E, Ix: <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a>&gt; <a class=\"trait\" href=\"petgraph/data/trait.DataMapMut.html\" title=\"trait petgraph::data::DataMapMut\">DataMapMut</a> for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.edge_weight_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#628-630\">source</a><a href=\"#method.edge_weight_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.DataMapMut.html#tymethod.edge_weight_mut\" class=\"fn\">edge_weight_mut</a>(&amp;mut self, e: <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;mut E</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Accesses the weight of edge <code>e</code></p>\n<p>Computes in <strong>O(1)</strong></p>\n</div></details><section id=\"method.node_weight_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/adj.rs.html#615-624\">source</a><a href=\"#method.node_weight_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/data/trait.DataMapMut.html#tymethod.node_weight_mut\" class=\"fn\">node_weight_mut</a>(&amp;mut self, n: Self::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","DataMapMut","petgraph::adj::UnweightedList"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()