#!/usr/bin/env ruby
# frozen_string_literal: true

# Print files with hh_parse errors and filter out the rest.
#
# The Hacklang parser prints file paths even when there are no errors in those files.
#
#     $ hh_parse --show-file-name --full-fidelity-errors-all $@
#     examples/hack-sql-fake/src/Query/UpdateQuery.php
#     examples/hack-sql-fake/src/QueryContext.php
#     (5,1)-(5,8) Some error
#     (10,3)-(10,6) Some error
#     examples/hack-sql-fake/src/SQLCommandProcessor.php
#
# This script filters file paths that are followed by another file path with no errors
# in between.
#
#     $ hh_parse --show-file-name --full-fidelity-errors-all $@ | bin/hh-errors
#     examples/hack-sql-fake/src/QueryContext.php
#     (5,1)-(5,8) Some error
#     (10,3)-(10,6) Some error

path = nil

ARGF.each_line do |line|
  # Consume lines until we have something that does *not* look like a file path.
  next path = line if line =~ /(^.*\.(php|hack))\s/

  unless path.nil?
    # Print the file path before we print any errors.
    puts path
    # Only print the file path once.
    path = nil
  end

  puts line
end
