================================================================================
comment: line
================================================================================

--
-- a
--
-- a

---

(haskell (comment) (comment) (comment) (comment) (empty_file))

================================================================================
comment: multi
================================================================================

{- a
   a
   - a
-}
f = a
{-a-}

---

(haskell (comment) (function (variable) (exp_name (variable))) (comment))

================================================================================
comment: hash inside
================================================================================

{- #comment -}

---

(haskell (comment) (empty_file))

================================================================================
comment: newline termination
================================================================================

--

---

(haskell (comment) (empty_file))

================================================================================
comment: nested
================================================================================

{- comment
{- nested
-}
-}

---

(haskell (comment) (empty_file))

================================================================================
comment: unicode symbol
================================================================================

-- ∀

{- ∀ -}

---

(haskell (comment) (comment) (empty_file))

================================================================================
comment: double minus before multiline end
================================================================================

module A where

{- --}

---

(haskell (module) (where) (comment))

================================================================================
comment: double brace before nested begin
================================================================================

module A where

{- {{- -} -}

---

(haskell (module) (where) (comment))
