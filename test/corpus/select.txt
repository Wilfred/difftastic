================================================================================
SELECT statement with joins
================================================================================

SELECT a, t.a, t.b, (INTERVAL '5 minutes') as b
FROM table1 AS t
JOIN t1 ON (t.a = t1.a)
INNER JOIN t2 ON (t.a = t2.a)
FULL OUTER JOIN t2 ON t.a = t2.a
FULL JOIN t3 ON t.a = t3.a
RIGHT JOIN t4 ON t.a = t4.a
RIGHT OUTER JOIN t5 ON t.a = t5.a
LEFT JOIN t6 ON t.a = t6.a
LEFT OUTER JOIN t7 ON t.a = t7.a;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))
        (alias
          (interval_expression
            (string
              (content)))
          (identifier))))
    (from_clause
      (alias
        (identifier)
        (identifier)))
    (join_clause
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (join_clause
      (join_type)
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (join_clause
      (join_type)
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (join_clause
      (join_type)
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (join_clause
      (join_type)
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (join_clause
      (join_type)
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (join_clause
      (join_type)
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (join_clause
      (join_type)
      (identifier)
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))))

================================================================================
SELECT element from array
================================================================================

SELECT a[0];

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (array_element_access
          (identifier)
          (number))))))

================================================================================
SELECT with aliases
================================================================================

SELECT a as b, c d, e
FROM table1 AS t, table2 t2, table3

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (alias
          (identifier)
          (identifier))
        (alias
          (identifier)
          (identifier))
        (identifier)))
    (from_clause
      (alias
        (identifier)
        (identifier))
      (alias
        (identifier)
        (identifier))
      (identifier))))

================================================================================
SELECT with limit
================================================================================

SELECT * FROM foo LIMIT 10;
SELECT * FROM foo LIMIT 10, 5;
SELECT * FROM foo LIMIT 10 OFFSET 5;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (asterisk_expression)))
    (from_clause
      (identifier))
    (limit_clause
      (number)))
  (select_statement
    (select_clause
      (select_clause_body
        (asterisk_expression)))
    (from_clause
      (identifier))
    (limit_clause
      (number)
      (number)))
  (select_statement
    (select_clause
      (select_clause_body
        (asterisk_expression)))
    (from_clause
      (identifier))
    (limit_clause
      (number))
    (offset_clause
      (number))))

================================================================================
SELECT with CTE
================================================================================

WITH t AS (
    SELECT * FROM foo
)
SELECT * FROM bar;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (with_clause
      (cte
        (identifier)
        (select_statement
          (select_clause
            (select_clause_body
              (asterisk_expression)))
          (from_clause
            (identifier)))))
    (select_clause
      (select_clause_body
        (asterisk_expression)))
    (from_clause
      (identifier))))

================================================================================
SELECT with aliased join
================================================================================

SELECT foo.x, bar.y FROM foo LEFT JOIN (SELECT id, y FROM baz) baz ON baz.id = foo.id;
SELECT foo.x, bar.y FROM foo LEFT JOIN (SELECT id, y FROM baz) AS baz ON baz.id = foo.id;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (from_clause
      (identifier))
    (join_clause
      (join_type)
      (alias
        (select_subexpression
          (select_statement
            (select_clause
              (select_clause_body
                (identifier)
                (identifier)))
            (from_clause
              (identifier))))
        (identifier))
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier)))))
  (select_statement
    (select_clause
      (select_clause_body
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))
    (from_clause
      (identifier))
    (join_clause
      (join_type)
      (alias
        (select_subexpression
          (select_statement
            (select_clause
              (select_clause_body
                (identifier)
                (identifier)))
            (from_clause
              (identifier))))
        (identifier))
      (binary_expression
        (dotted_name
          (identifier)
          (identifier))
        (dotted_name
          (identifier)
          (identifier))))))

================================================================================
SELECT with LATERAL subexpression
================================================================================

SELECT * FROM LATERAL (SELECT * FROM foo) bar;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (asterisk_expression)))
    (from_clause
      (alias
        (select_subexpression
          (select_statement
            (select_clause
              (select_clause_body
                (asterisk_expression)))
            (from_clause
              (identifier))))
        (identifier)))))

================================================================================
SELECT GROUP BY
================================================================================

SELECT a, b FROM foo GROUP BY a + 1, b;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (identifier)))
    (from_clause
      (identifier))
    (group_by_clause
      (group_expression
        (binary_expression
          (identifier)
          (number)))
      (group_expression
        (identifier)))))

================================================================================
SELECT GROUP BY GROUPING SETS
================================================================================

SELECT a, b FROM foo GROUP BY GROUPING SETS ((), (a), (b), (a, b), (a + 1, b + 1));

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (identifier)))
    (from_clause
      (identifier))
    (group_by_clause
      (group_expression
        (grouping_sets_clause
          (expression_list)
          (expression_list
            (identifier))
          (expression_list
            (identifier))
          (expression_list
            (identifier)
            (identifier))
          (expression_list
            (binary_expression
              (identifier)
              (number))
            (binary_expression
              (identifier)
              (number))))))))

================================================================================
SELECT GROUP BY ROLLUP
================================================================================

SELECT a, b FROM foo GROUP BY ROLLUP (a, (a, b), a + 1, b + 1);

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (identifier)))
    (from_clause
      (identifier))
    (group_by_clause
      (group_expression
        (rollup_clause
          (identifier)
          (expression_list
            (identifier)
            (identifier))
          (binary_expression
            (identifier)
            (number))
          (binary_expression
            (identifier)
            (number)))))))

================================================================================
SELECT GROUP BY CUBE
================================================================================

SELECT a, b FROM foo GROUP BY CUBE (a, (a, b), a + 1, b + 1);

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (identifier)))
    (from_clause
      (identifier))
    (group_by_clause
      (group_expression
        (cube_clause
          (identifier)
          (expression_list
            (identifier)
            (identifier))
          (binary_expression
            (identifier)
            (number))
          (binary_expression
            (identifier)
            (number)))))))

================================================================================
SELECT GROUP BY CUBE
================================================================================

SELECT a, b FROM foo GROUP BY CUBE (a, (a, b), a + 1, b + 1);

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (identifier)))
    (from_clause
      (identifier))
    (group_by_clause
      (group_expression
        (cube_clause
          (identifier)
          (expression_list
            (identifier)
            (identifier))
          (binary_expression
            (identifier)
            (number))
          (binary_expression
            (identifier)
            (number)))))))

================================================================================
SELECT GROUP BY HAVING
================================================================================

SELECT a, b FROM foo GROUP BY a, b HAVING a > b;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (identifier)))
    (from_clause
      (identifier))
    (group_by_clause
      (group_expression
        (identifier))
      (group_expression
        (identifier))
      (having_clause
        (binary_expression
          (identifier)
          (identifier))))))

================================================================================
SELECT GROUP BY complex
================================================================================

SELECT a, b FROM foo GROUP BY
  a + 1,
  GROUPING SETS ((), (a, b)),
  ROLLUP (a + 1, (a, b)),
  CUBE (a + 1, (a, b))
  HAVING a > b;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_clause
      (select_clause_body
        (identifier)
        (identifier)))
    (from_clause
      (identifier))
    (group_by_clause
      (group_expression
        (binary_expression
          (identifier)
          (number)))
      (group_expression
        (grouping_sets_clause
          (expression_list)
          (expression_list
            (identifier)
            (identifier))))
      (group_expression
        (rollup_clause
          (binary_expression
            (identifier)
            (number))
          (expression_list
            (identifier)
            (identifier))))
      (group_expression
        (cube_clause
          (binary_expression
            (identifier)
            (number))
          (expression_list
            (identifier)
            (identifier))))
      (having_clause
        (binary_expression
          (identifier)
          (identifier))))))
