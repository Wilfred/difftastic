================================================================================
parenthesized no arg
================================================================================

fn() -> a + b end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (bare_arguments
        (block))
      (binary_op
        (identifier)
        (identifier)))))

================================================================================
parenthesized one arg
================================================================================

fn(a) -> a + b end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (bare_arguments
        (block
          (identifier)))
      (binary_op
        (identifier)
        (identifier)))))

================================================================================
parenthesized multi args
================================================================================

fn(a, b) -> a + b end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (bare_arguments
        (identifier)
        (identifier))
      (binary_op
        (identifier)
        (identifier)))))

================================================================================
parenthesized multi args, multi line body
================================================================================

fn(a, b) ->
  a + b
  5
end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (bare_arguments
        (identifier)
        (identifier))
      (binary_op
        (identifier)
        (identifier))
      (integer))))

================================================================================
non parenthesized no arg
================================================================================

fn -> a + b end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (binary_op
        (identifier)
        (identifier)))))

================================================================================
non parenthesized one arg
================================================================================

fn a -> a + b end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (bare_arguments
        (identifier))
      (binary_op
        (identifier)
        (identifier)))))

================================================================================
non parenthesized multi args
================================================================================

fn a, b -> a + b end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (bare_arguments
        (identifier)
        (identifier))
      (binary_op
        (identifier)
        (identifier)))))

================================================================================
non parenthesized multi args, multi line body
================================================================================

fn a, b ->
  a + b
  5
end

--------------------------------------------------------------------------------

(program
  (anonymous_function
    (stab_expression
      (bare_arguments
        (identifier)
        (identifier))
      (binary_op
        (identifier)
        (identifier))
      (integer))))

================================================================================
non parenthesized body with dot call
================================================================================

File.cd!(dir, fn ->
  Mix.Task.run("deps.loadpaths")
end)

--------------------------------------------------------------------------------

(program
  (dot_call
    (module)
    (function_identifier)
    (arguments
      (identifier)
      (anonymous_function
        (stab_expression
          (dot_call
            (module)
            (function_identifier)
            (arguments
              (string
                (string_start)
                (string_content)
                (string_end)))))))))

================================================================================
no arg with guard
================================================================================

fun = fn () when node() == :nonode@nohost -> true end

--------------------------------------------------------------------------------

(program
  (binary_op
    (identifier)
    (anonymous_function
      (stab_expression
        (bare_arguments
          (binary_op
            (block)
            (binary_op
              (call
                (function_identifier)
                (arguments))
              (atom
                (atom_literal)))))
        (true)))))
