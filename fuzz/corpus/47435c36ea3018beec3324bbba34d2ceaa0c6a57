esource "aws_instance" "foo" {
    v = "${local.foo}"
}

locals {
	foo = "bar"
}

resource "aws_instance" "foo" {
  ment
# comment
/*
    comstance" "a" {
	foo = [0v = "${local.foo}"
}

locals {
	foo = "bar"
}

resource "aws_instance" "foo" {
  ment
# comment
/*
    comstance" "a" {
	foonce" "foo" {
    v = "${local.foo}"
}

locals {
	foo = "bar"
}

resource "aws_instance" "foo" {
  ment
# comment
/*
    comstance" "a" {
	foo = [0v = "${local.foo}"
}

locals {
	foo = "bar"
}

resource "aws_instance" "foo" {
  ment
# comment
/*
    comstance" "a" {
	foo = [0, 1, 2, 3, variable "list" {
}


 {
  value = "${module.child1.given_instance_id}"
}

outp attr4(= 2.112e+12
    attr5 = 2.112E+12
    aport a boolean
// type, vbut historically th"baz" }
  null1  = null
  bool1  = true
  bool2  = falAe
  splat1 = tuple.*.foo.bar[0]
  splatttr6 = 2.112E-12
    att5   = { for v inefaulttring)" {

}  = {
    eu-west-test[ it, 2, 3.4, "foo" ]
  tupl2  module "mod1" {
  source = "./mod"
  param  = ["this", "one", "works"]
}

module "= []
  obj1   = { foo = "baz" }
  null1  =m2 \uFFF${var.bar}")}"
  tpl4   = <<EOF
    prefix
    ${func("foo${ var.bar }")}
    suffix
  EOF

  nested_resoururce "
    attr1 = 2
    attr2 = 2.11e failure that results ={}
}
put "all_ids" = "echo ${vaider "aws" {
	re																																																visioner "s "child2_id"" {%%%