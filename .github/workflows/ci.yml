# Copyright 2022 Leorize <leorize+oss@disroot.org>
#
# SPDX-License-Identifier: MPL-2.0

name: CI

on: [push, pull_request]

jobs:
  # uptodate:
  #   name: Node test build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"
  #         cache: "npm"
  #     - run: npm install
  #     - run: npm run build
  #     - name: Check for differences between commit and built file
  #       run: |
  #         if ! git diff --exit-code; then
  #           echo '::error::There are differences between commit and code built. Make sure that `npm run build` is run before commiting. Check log for more details.'
  #           git diff
  #           exit 1
  #         fi
  #       shell: bash

  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Run test suite on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: npm install
      - run: npm run build
      - name: Run test suite
        run: |
          if [[ "$RUNNER_OS" == macOS ]]; then
            # macOS default compiler defaults to C++03 for some reason.
            # Force at least C++14 via an another compiler.
            export CXX=$(brew --prefix llvm@15)/bin/clang++
          fi

          npm test
        shell: bash
      - name: Test parsing sample Nim files
        run: npm exec -- tree-sitter parse -s -t -q 'samples/**/*.nim'
        shell: bash

  rust:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Run rust test build on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: npm install
      - run: npm run build
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Run test build
        uses: actions-rs/cargo@v1
        with:
          command: build

  success:
    needs:
      # - uptodate
      - tests
      - rust
    if: always()
    runs-on: ubuntu-latest
    name: "All checks passed"
    steps:
      - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        name: "Previous jobs failed"
        run: |
          echo "::error::One of the previous jobs failed"
          exit 1
