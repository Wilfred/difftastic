============================================
Integer literals
============================================

0;
0___0;
123;
0usize;
123i32;
123u32;
123_u32;
0xff_u8;
0o70_i16;
0b1111_1111_1001_0000_i32;

---

(source_file
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal))

============================================
Floating-point literals
============================================

123.123;
2.;
123.0f64;
0.1f64;
0.1f32;
12E+99_f64;

---

(source_file
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal)
  (number_literal))

============================================
String literals
============================================

"";
"abc";
"foo\nbar";
"foo\
    bar";
"\"foo\"";

r#"abc"#;
r##"foo #"# bar"##;
r###"foo ##"## bar"###;

---

(source_file
  (string_literal)
  (string_literal)
  (string_literal)
  (string_literal)
  (string_literal)
  (raw_string_literal)
  (raw_string_literal)
  (raw_string_literal))

============================================
Character literals
============================================

'a';
'\'';
'\0';
'\t';
'\xff';
'\\';

---

(source_file
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal)
  (char_literal))

============================================
Boolean literals
============================================

true;
false;

---

(source_file (boolean_literal) (boolean_literal))
