=========================================
Type Class Declarations
=========================================

class Show a where {}
class Show a b where {}

---

(module
  (type_class (constructor (constructor_identifier) (variable_identifier)) (where))
  (type_class (constructor (constructor_identifier) (variable_identifier) (variable_identifier)) (where)))

=========================================
Type Class Declarations With Context
=========================================

class Show a => Read a where {}
class (Show a, Eq a) => Read a where {}
class (Show (f a), Eq a) => Read f a where {}

---

(module
  (type_class
    (context (constructor (constructor_identifier) (variable_identifier)))
    (constructor
      (constructor_identifier)
      (variable_identifier))
    (where))
  (type_class
    (context
      (constructor (constructor_identifier) (variable_identifier))
      (constructor (constructor_identifier) (variable_identifier)))
    (constructor
      (constructor_identifier)
      (variable_identifier))
    (where))
  (type_class
    (context
      (constructor (constructor_identifier) (variable_identifier) (variable_identifier))
      (constructor (constructor_identifier) (variable_identifier)))
    (constructor
      (constructor_identifier)
      (variable_identifier)
      (variable_identifier))
    (where)))

=========================================
Type Class Declarations With Body
=========================================

class Foo a where {
  op :: Num b => a -> b -> a
  op' :: (Num a, Num b) => a -> b -> a
}

---

(module
  (type_class
    (constructor
      (constructor_identifier)
      (variable_identifier))
    (where
      (type_signature
        (variable_identifier)
        (context
          (constructor (constructor_identifier) (variable_identifier)))
        (type
          (type_variable)
          (type
            (type_variable)
            (type
              (type_variable)))))
      (type_signature
        (variable_identifier)
        (context (constructor (constructor_identifier) (variable_identifier)) (constructor (constructor_identifier) (variable_identifier)))
        (type
          (type_variable)
          (type
            (type_variable)
            (type
              (type_variable))))))))

=========================================
Type Class Declarations With Fixity
=========================================

class Foo a where {
  infixl `op`
  infixr 7 `op`
  infix 7 `op`, `ip`, `ap`
  infix <$>
  infix 7 <$>
  infix 7 :
  infix 7 :.
  infix 7 :<:
}

---

(module
  (type_class
    (constructor
      (constructor_identifier)
      (variable_identifier))
    (where
      (fixity (variable_identifier))
      (fixity (integer) (variable_identifier))
      (fixity (integer) (variable_identifier) (variable_identifier) (variable_identifier))
      (fixity (variable_symbol))
      (fixity (integer) (variable_symbol))
      (fixity (integer) (constructor_symbol))
      (fixity (integer) (constructor_symbol))
      (fixity (integer) (constructor_symbol)))))
