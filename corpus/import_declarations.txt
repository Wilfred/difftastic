=========================================
Import Declaration
=========================================

module A where

import Maybe
import Either()

---

(module
  (module_identifier)
  (where
    (import (module_identifier))
    (import
      (module_identifier)
      (import_specification))))

=========================================
Import Declaration With Constructor
=========================================

module A where

import Data.Maybe (Maybe(..))

---

(module
  (module_identifier)
  (where
    (import
      (module_identifier)
      (import_specification
        (constructor (constructor_identifier) (all_constructors))))))

=========================================
Import Declaration With Functions
=========================================

module A where

import Data.Maybe (fromMaybe, fromJust)

---

(module
  (module_identifier)
  (where
    (import
      (module_identifier)
      (import_specification (variable_identifier) (variable_identifier)))))

=========================================
Import Declaration With Constructor And Functions
=========================================

module A where

import Data.Maybe (Maybe(..), fromMaybe, fromJust)

---

(module
  (module_identifier)
  (where
    (import
      (module_identifier)
      (import_specification
        (constructor (constructor_identifier) (all_constructors))
        (variable_identifier)
        (variable_identifier)))))

=========================================
Import Declaration With Qualified
=========================================

module A where

import qualified Data.Maybe
import qualified Either ()
import qualified Data.Function (fix)

---

(module
  (module_identifier)
  (where
    (import
      (qualified)
      (module_identifier))
    (import
      (qualified)
      (module_identifier)
      (import_specification))
    (import
      (qualified)
      (module_identifier)
      (import_specification (variable_identifier)))))

=========================================
Import Declaration With Qualified, As
=========================================

module A where

import qualified Data.Maybe as DM
import qualified Either as E ()

---

(module
  (module_identifier)
  (where
    (import
      (qualified)
      (import_alias
        (module_identifier)
        (module_identifier)))
    (import
      (qualified)
      (import_alias
        (module_identifier)
        (module_identifier))
      (import_specification))))

=========================================
Import Declaration With As, Constructor And Function
=========================================

module A where

import Data.Maybe as DM (Maybe(..), fromMaybe)

---

(module
  (module_identifier)
  (where
    (import
      (import_alias
        (module_identifier)
        (module_identifier))
      (import_specification
        (constructor (constructor_identifier) (all_constructors))
        (variable_identifier)))))

=========================================
Import Declaration With Qualified, As, Constructor And Function
=========================================

module A where

import qualified Data.Maybe as M (Maybe(..), fromMaybe)

---

(module
  (module_identifier)
  (where
    (import
      (qualified)
      (import_alias
        (module_identifier)
        (module_identifier))
      (import_specification
        (constructor
          (constructor_identifier) (all_constructors))
          (variable_identifier)))))

=========================================
Import Declaration With Hiding, Constructor and Function
=========================================

module A where

import Data.Maybe hiding (Maybe(..), fromMaybe)

---

(module
  (module_identifier)
  (where
    (import
      (module_identifier)
      (hidden_import_specification (constructor (constructor_identifier) (all_constructors)) (variable_identifier)))))

=========================================
Import Declaration With Qualified, Hiding, Constructor and Function
=========================================

module A where

import qualified Data.Maybe hiding ()
import qualified Data.Either hiding (Either(..), decodeEither)
import qualified Data.Function hiding (fix)
import qualified Data.List as DL hiding (head)

---

(module
  (module_identifier)
  (where
    (import
      (qualified)
      (module_identifier)
      (hidden_import_specification))
    (import
      (qualified)
      (module_identifier)
      (hidden_import_specification
        (constructor (constructor_identifier) (all_constructors))
        (variable_identifier)))
    (import
      (qualified)
      (module_identifier)
      (hidden_import_specification (variable_identifier)))
    (import
      (qualified)
      (import_alias
        (module_identifier)
        (module_identifier))
      (hidden_import_specification (variable_identifier)))))
