===============================
Variable Identifiers
===============================

a

---

(module
  (variable))

===============================
Function Application
===============================

f = a b
f = a b c
f = a b c d

---

(module
  (function_declaration
    (function_head
      (function_identifier (variable)))
    (function_body
      (function_application
        (variable)
        (variable))))
  (function_declaration
    (function_head
      (function_identifier (variable)))
    (function_body
      (function_application
        (function_application
          (variable)
          (variable))
        (variable))))
  (function_declaration
    (function_head
      (function_identifier (variable)))
    (function_body
      (function_application
        (function_application
          (function_application
            (variable)
            (variable))
          (variable))
        (variable)))))

===============================
Function Application With Constructors
===============================

f = Just b
f = Right b
f = Example a c d
f = ()

---

(module
  (function_declaration
    (function_head
      (function_identifier (variable)))
    (function_body
      (function_application
        (type_constructor (identifier))
        (variable))))
  (function_declaration
    (function_head
      (function_identifier (variable)))
    (function_body
      (function_application
        (type_constructor (identifier))
        (variable))))
  (function_declaration
    (function_head
      (function_identifier (variable)))
    (function_body
      (function_application
        (function_application
          (function_application
            (type_constructor (identifier))
            (variable))
          (variable))
        (variable))))
  (function_declaration
    (function_head
      (function_identifier (variable)))
    (function_body
      (type_constructor (unit_constructor)))))

===============================
Arithmetic Sequence
===============================

[1..]
[1,2..]
[1..2]
[1,2..10]

---

(module
  (arithmetic_sequence
    (enum_from (integer)))
  (arithmetic_sequence
    (enum_from_then (integer) (integer)))
  (arithmetic_sequence
    (enum_from_to (integer) (integer)))
  (arithmetic_sequence
    (enum_from_then_to (integer) (integer) (integer))))

===============================
List Comprehensions
===============================

[x | x <- xs]
[(x, y) | x <- xs, y <- ys]
[ x |  xs   <- [ [(1,2),(3,4)], [(5,4),(3,2)] ],
      (3,x) <- xs ]

---

(module
  (list_comprehension
    (variable)
    (generator
      (variable)
      (variable)))
  (list_comprehension
    (tuple
      (variable)
      (variable))
    (generator
      (variable)
      (variable))
    (generator
      (variable)
      (variable)))
  (list_comprehension
    (variable)
    (generator
      (variable)
      (list
        (list (tuple (integer) (integer)) (tuple (integer) (integer)))
        (list (tuple (integer) (integer)) (tuple (integer) (integer)))))
    (generator
      (tuple (integer) (variable))
      (variable))))
