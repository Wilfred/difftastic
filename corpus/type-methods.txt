=======================================
Class method with single parameter
=======================================

class A {
  private int GetBack(int b) {
    return b;
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (modifier)
        (predefined_type)
        (identifier_name)
        (parameter_list
          (parameter (predefined_type) (identifier_name)))
        (block
          (return_statement (identifier_name)))))))

=======================================
Class method with multiple parameters
=======================================

class A {
  void DoSomething(A a, B b) {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (parameter_list
          (parameter (identifier_name) (identifier_name))
          (parameter (identifier_name) (identifier_name)))
        (block)))))

=======================================
Class generic method
=======================================

class A {
  void Accept<T>(T accept) {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (type_parameter_list (identifier_name))
        (parameter_list
          (parameter (identifier_name) (identifier_name)))
        (block)))))

=======================================
Class generic method with new type constraint
=======================================

class A {
  void Accept<T>(T accept) where T: new() {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (type_parameter_list (identifier_name))
        (parameter_list
          (parameter (identifier_name) (identifier_name)))
        (type_parameter_constraints_clause
          (identifier_name)
          (type_parameter_constraints (constructor_constraint)))
        (block)))))

=======================================
Class generic method with multiple type constraints
=======================================

class A {
  void Accept<T1, T2>(T1 accept, T2 from)
    where T1: new()
    where T2: T1, new() {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (type_parameter_list
          (identifier_name)
          (identifier_name))
        (parameter_list
          (parameter (identifier_name) (identifier_name))
          (parameter (identifier_name) (identifier_name)))
        (type_parameter_constraints_clause
          (identifier_name)
          (type_parameter_constraints (constructor_constraint)))
        (type_parameter_constraints_clause
          (identifier_name)
          (type_parameter_constraints
            (identifier_name) (constructor_constraint)))
        (block)))))

=======================================
Class method with out parameter
=======================================

class A {
  void HasAnOut(out int a) {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (parameter_list
          (parameter (parameter_modifier) (predefined_type) (identifier_name)))
        (block)))))

=======================================
Class method with ref parameter
=======================================

class A {
  void HasAnOut(ref int a) {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (parameter_list
          (parameter (parameter_modifier) (predefined_type) (identifier_name)))
        (block)))))

=======================================
Class method with default parameter
=======================================

class A {
  void HasAnOut(int a = 5) {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (parameter_list
          (parameter
            (predefined_type)
            (identifier_name)
            (equals_value_clause (integer_literal))))
        (block)))))

=======================================
Class static method with single parameter
=======================================

class A {
  static int GetBack(int b) {
    return b;
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (modifier)
        (predefined_type)
        (identifier_name)
        (parameter_list
          (parameter (predefined_type) (identifier_name)))
        (block
          (return_statement (identifier_name)))))))
