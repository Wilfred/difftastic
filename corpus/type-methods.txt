=======================================
Class method with single parameter
=======================================

class A {
  private int GetBack(int b) {
    return b;
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (method_declaration
      (modifiers)
      (return_type (predefined_type))
      (identifier_name)
      (parameter_list
        (parameter (predefined_type) (identifier_name)))
      (statement_block
        (return_statement (identifier_name))))))

=======================================
Class method with multiple parameters
=======================================

class A {
  void DoSomething(A a, B b) {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (method_declaration
      (return_type)
      (identifier_name)
      (parameter_list
        (parameter (identifier_name) (identifier_name))
        (parameter (identifier_name) (identifier_name)))
      (statement_block))))

=======================================
Class generic method
=======================================

class A {
  void Accept<T>(T accept) {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (method_declaration
      (return_type)
      (identifier_name)
      (type_parameter_list (type_parameter (identifier_name)))
      (parameter_list
        (parameter (identifier_name) (identifier_name)))
      (statement_block))))

=======================================
Class generic method with new type constraint
=======================================

class A {
  void Accept<T>(T accept) where T: new() {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (method_declaration
      (return_type)
      (identifier_name)
      (type_parameter_list (type_parameter (identifier_name)))
      (parameter_list
        (parameter (identifier_name) (identifier_name)))
      (type_parameter_constraints_clause
        (identifier_name)
        (type_parameter_constraints (constructor_constraint)))
      (statement_block))))

=======================================
Class generic method with multiple type constraints
=======================================

class A {
  void Accept<T1, T2>(T1 accept, T2 from)
    where T1: new()
    where T2: T1, new() {
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (method_declaration
      (return_type)
      (identifier_name)
      (type_parameter_list
        (type_parameter (identifier_name))
        (type_parameter (identifier_name)))
      (parameter_list
        (parameter (identifier_name) (identifier_name))
        (parameter (identifier_name) (identifier_name)))
      (type_parameter_constraints_clause
        (identifier_name)
        (type_parameter_constraints (constructor_constraint)))
      (type_parameter_constraints_clause
        (identifier_name)
        (type_parameter_constraints
          (identifier_name) (constructor_constraint)))
      (statement_block))))

=======================================
Class static method with single parameter
=======================================

class A {
  static int GetBack(int b) {
    return b;
  }
}

---

(compilation_unit
  (class_declaration
    (identifier_name)
    (method_declaration
      (modifiers)
      (return_type (predefined_type))
      (identifier_name)
      (parameter_list
        (parameter (predefined_type) (identifier_name)))
      (statement_block
        (return_statement (identifier_name))))))
