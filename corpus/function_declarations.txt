=========================================
Function Declarations
=========================================

f :: a -> a -> a
f num1 num2 = num2

---

(module
  (type_signature
    (variable_identifier)
      (type
        (type_variable)
        (type
          (type_variable)
          (type
            (type_variable)))))
  (function_declaration
    (function_head
      (variable_identifier)
      (variable_identifier)
      (variable_identifier))
    (function_body
      (variable_identifier))))

=========================================
Function Declarations With @
=========================================

f :: a -> a -> a
f n@num1 x@num2 = x

---

(module
  (type_signature
    (variable_identifier)
      (type
        (type_variable)
        (type
          (type_variable)
          (type
            (type_variable)))))
  (function_declaration
    (function_head
      (variable_identifier)
      (variable_identifier)
      (variable_symbol)
      (variable_identifier)
      (variable_identifier)
      (variable_symbol)
      (variable_identifier))
    (function_body
      (variable_identifier))))

=========================================
Function Declarations With _ (wildcard)
=========================================

f :: a -> a -> a
f _ num2 = num2

---

(module
  (type_signature
    (variable_identifier)
      (type
        (type_variable)
        (type
          (type_variable)
          (type
            (type_variable)))))
  (function_declaration
    (function_head
      (variable_identifier)
      (wildcard)
      (variable_identifier))
    (function_body
      (variable_identifier))))

=========================================
Function Declarations With Literals
=========================================

f :: a -> a -> a
f 1 2 = 3
f "hello" "world" = "goodbye"
f 'a' 'b' = 'c'
f 1.0 2.0 = 3.0

---

(module
  (type_signature
    (variable_identifier)
      (type
        (type_variable)
        (type
          (type_variable)
          (type
            (type_variable)))))
  (function_declaration
    (function_head
      (variable_identifier)
      (integer)
      (integer))
    (function_body
      (integer)))
  (function_declaration
    (function_head
      (variable_identifier)
      (string)
      (string))
    (function_body
      (string)))
  (function_declaration
    (function_head
      (variable_identifier)
      (char)
      (char))
    (function_body
      (char)))
  (function_declaration
    (function_head
      (variable_identifier)
      (float)
      (float))
    (function_body
      (float))))


=========================================
Function Declarations With Field Labels
=========================================

f :: Ex -> Int
f Ex { a = 1 } = 1
f Ex { b = 1 } = 1

---

(module
  (type_signature
    (variable_identifier)
    (type
      (type_constructor)
      (type
        (type_constructor))))
  (function_declaration
    (function_head
      (variable_identifier)
      (constructor_identifier)
      (labels
        (label
          (variable_identifier)
          (integer))))
    (function_body
      (integer)))
  (function_declaration
    (function_head
      (variable_identifier)
      (constructor_identifier)
      (labels
        (label
          (variable_identifier)
          (integer))))
    (function_body
      (integer))))
