=====================================
Global empty interface
=====================================

public interface IOne {};

---

(compilation_unit
  (interface_declaration
    (modifiers)
    (identifier_name)))

=====================================
Interface with properties
=====================================

interface IOne {
  byte Get { get; }
  char Set { set; }
  uint GetSet { get; set; }
  long SetGet { set; get; }
};

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (interface_property_declaration
      (predefined_type)
      (identifier_name)
      (interface_accessor))
    (interface_property_declaration
      (predefined_type)
      (identifier_name)
      (interface_accessor))
    (interface_property_declaration
      (predefined_type)
      (identifier_name)
      (interface_accessor) (interface_accessor))
    (interface_property_declaration
      (predefined_type)
      (identifier_name)
      (interface_accessor) (interface_accessor))))

=====================================
Interface with methods
=====================================

interface IOne {
  void Nothing();
  int Output();
  void Input(string a);
  int InputOutput(string a);
};

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (interface_method_declaration
      (void_keyword)
      (identifier_name)
      (parameter_list))
    (interface_method_declaration
      (predefined_type)
      (identifier_name)
      (parameter_list))
    (interface_method_declaration
      (void_keyword)
      (identifier_name)
      (parameter_list (parameter (predefined_type) (identifier_name))))
    (interface_method_declaration
      (predefined_type)
      (identifier_name)
      (parameter_list (parameter (predefined_type) (identifier_name))))))

=====================================
Interface base single
=====================================

private interface IOne : ITwo { }

---

(compilation_unit
  (interface_declaration
    (modifiers)
    (identifier_name)
    (interface_base
      (identifier_name))))

=====================================
Interface base multiple
=====================================

private interface IOne : ITwo, IThree { }

---

(compilation_unit
  (interface_declaration
    (modifiers)
    (identifier_name)
    (interface_base
      (identifier_name)
      (identifier_name))))

=====================================
Interface generic
=====================================

private interface IOne<T1> : ITwo { }

---

(compilation_unit
  (interface_declaration
    (modifiers)
    (identifier_name)
    (type_parameter_list (type_parameter (identifier_name)))
    (interface_base
      (identifier_name))))

=====================================
Interface generic single constraint
=====================================

private interface IOne<T1> : ITwo where T1:T2 { }

---

(compilation_unit
  (interface_declaration
    (modifiers)
    (identifier_name)
    (type_parameter_list (type_parameter (identifier_name)))
    (interface_base (identifier_name))
     (type_parameter_constraints_clause
      (identifier_name)
       (type_parameter_constraints (identifier_name)))))

=====================================
Interface generic multiple constraints
=====================================

private interface IOne<T1, T3> : ITwo where T1:T2 where T3:new() { }

---

(compilation_unit
  (interface_declaration
    (modifiers)
    (identifier_name)
    (type_parameter_list
      (type_parameter (identifier_name))
      (type_parameter (identifier_name)))
    (interface_base (identifier_name))
     (type_parameter_constraints_clause
      (identifier_name)
       (type_parameter_constraints (identifier_name)))
     (type_parameter_constraints_clause
      (identifier_name)
      (type_parameter_constraints (constructor_constraint)))))

=====================================
Interface in namespace
=====================================

namespace A {
  interface IOne : ITwo { }
}

---

(compilation_unit
  (namespace_declaration (identifier_name)
    (interface_declaration
      (identifier_name)
      (interface_base
        (identifier_name)))))

=======================================
Interface event declarations
=======================================

interface A {
  event EventHandler<T> SomeEvent;
}

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (interface_event_declaration
      (generic_name (identifier_name)
        (type_parameter_list (type_parameter (identifier_name))))
      (identifier_name))))

=====================================
Interface with indexer
=====================================

interface A {
  bool this[int index] { get; set; }
}

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (interface_indexer_declaration
      (predefined_type)
      (parameter (predefined_type) (identifier_name))
      (interface_accessor)
      (interface_accessor))))
