=====================================
Global empty interface
=====================================

public interface IOne {};

---

(compilation_unit
  (interface_declaration
    (modifier)
    (identifier_name)
    (class_body)))

=====================================
Interface with properties
=====================================

interface IOne {
  byte Get { get; }
  char Set { set; }
  uint GetSet { get; set; }
  long SetGet { set; get; }
};

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (class_body
      (property_declaration
        (predefined_type)
        (identifier_name)
        (accessor_declaration))
      (property_declaration
        (predefined_type)
        (identifier_name)
        (accessor_declaration))
      (property_declaration
        (predefined_type)
        (identifier_name)
        (accessor_declaration) (accessor_declaration))
      (property_declaration
        (predefined_type)
        (identifier_name)
        (accessor_declaration) (accessor_declaration)))))

=====================================
Interface with methods
=====================================

interface IOne {
  void Nothing();
  int Output();
  void Input(string a);
  int InputOutput(string a);
};

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (parameter_list))
      (method_declaration
        (predefined_type)
        (identifier_name)
        (parameter_list))
      (method_declaration
        (void_keyword)
        (identifier_name)
        (parameter_list (parameter (predefined_type) (identifier_name))))
      (method_declaration
        (predefined_type)
        (identifier_name)
        (parameter_list (parameter (predefined_type) (identifier_name)))))))

=====================================
Interface base single
=====================================

private interface IOne : ITwo { }

---

(compilation_unit
  (interface_declaration
    (modifier)
    (identifier_name)
    (interface_base
      (identifier_name))
    (class_body)))

=====================================
Interface base multiple
=====================================

private interface IOne : ITwo, IThree { }

---

(compilation_unit
  (interface_declaration
    (modifier)
    (identifier_name)
    (interface_base
      (identifier_name)
      (identifier_name))
    (class_body)))

=====================================
Interface generic
=====================================

private interface IOne<T1> : ITwo { }

---

(compilation_unit
  (interface_declaration
    (modifier)
    (identifier_name)
    (type_parameter_list (identifier_name))
    (interface_base
      (identifier_name))
    (class_body)))

=====================================
Interface generic single constraint
=====================================

private interface IOne<T1> : ITwo where T1:T2 { }

---

(compilation_unit
  (interface_declaration
    (modifier)
    (identifier_name)
    (type_parameter_list (identifier_name))
    (interface_base (identifier_name))
     (type_parameter_constraints_clause
      (identifier_name)
       (type_parameter_constraint (type_constraint (identifier_name))))
    (class_body)))

=====================================
Interface generic multiple constraints
=====================================

private interface IOne<T1, T3> : ITwo where T1:T2 where T3:new() { }

---

(compilation_unit
  (interface_declaration
    (modifier)
    (identifier_name)
    (type_parameter_list
      (identifier_name)
      (identifier_name))
    (interface_base (identifier_name))
     (type_parameter_constraints_clause
      (identifier_name)
       (type_parameter_constraint (type_constraint (identifier_name))))
     (type_parameter_constraints_clause
      (identifier_name)
      (type_parameter_constraint (constructor_constraint)))
    (class_body)))

=====================================
Interface in namespace
=====================================

namespace A {
  interface IOne : ITwo { }
}

---

(compilation_unit
  (namespace_declaration (identifier_name)
    (interface_declaration
      (identifier_name)
      (interface_base
        (identifier_name))
    (class_body))))

=======================================
Interface event declarations
=======================================

interface A {
  event EventHandler<T> SomeEvent;
}

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (class_body
        (event_field_declaration
          (variable_declaration
            (generic_name (identifier_name)
              (type_argument_list (identifier_name)))
            (variable_declarator (identifier_name)))))))

=====================================
Interface with indexer
=====================================

interface A {
  bool this[int index] { get; set; }
}

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (class_body
      (indexer_declaration
        (predefined_type)
        (parameter (predefined_type) (identifier_name))
        (accessor_declaration)
        (accessor_declaration)))))

=====================================
Interface with default method
=====================================

interface MyDefault {
  void Log(string message) {
    Console.WriteLine(message);
  }
}

---

(compilation_unit
  (interface_declaration
    (identifier_name)
    (class_body
      (method_declaration
        (void_keyword)
        (identifier_name)
        (parameter_list
          (parameter (predefined_type) (identifier_name)))
        (block
          (expression_statement
            (call_expression
              (qualified_name (identifier_name) (identifier_name))
              (argument_list (identifier_name)))))))))
