================================================================================
spec with splat
================================================================================

@spec write_dot_graph!(
        Path.t(),
        String.t(),
        [node],
        (node -> {formatted_node, [node]}),
        keyword
      ) :: :ok
      when node: term()

--------------------------------------------------------------------------------

(program
  (unary_op
    (call
      (function_identifier)
      (binary_op
        (binary_op
          (call
            (function_identifier)
            (arguments
              (dot_call
                (module)
                (function_identifier)
                (arguments))
              (dot_call
                (module)
                (function_identifier)
                (arguments))
              (list
                (identifier))
              (block
                (stab_expression
                  (bare_arguments
                    (identifier))
                  (tuple
                    (identifier)
                    (list
                      (identifier)))))
              (identifier)))
          (atom
            (atom_literal)))
        (keyword_list
          (keyword
            (keyword_literal))
          (call
            (function_identifier)
            (arguments)))))))

================================================================================
non empty list
================================================================================

@spec [type, ...]

--------------------------------------------------------------------------------

(program
  (unary_op
    (call
      (function_identifier)
      (list
        (identifier)
        (identifier)))))
